
Allocating common symbols
Common symbol       size              file

old_fp              0x4               dbug.o
bmem_queue          0x10              dbug.o
prio                0x4               dbug.o
bmsg_queue          0x10              dbug.o
init_key_head       0x4               dbug.o
running             0x4               dbug.o
mailbox             0x280             dbug.o
init_key_tail       0x4               dbug.o
CharIn              0x1               dbug.o
old_stack           0x4               /tmp/ccjJZfMc.o
memoryBlocks        0x100             dbug.o
temp_sp             0x4               dbug.o
proc_pointer        0x4               dbug.o
ready_queue         0x10              dbug.o
msg_length          0x4               dbug.o
command_flag        0x4               dbug.o
main_stack          0x1000            /tmp/ccjJZfMc.o
current_command     0x4               dbug.o
red_lever           0x4               dbug.o
sender_ID           0x4               dbug.o
init_blocks_head    0x4               dbug.o
total_procs         0x4               dbug.o
CharOut             0x1               dbug.o
kcd_msg             0x4               dbug.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10200000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccjJZfMc.o
LOAD /tmp/cciTwjZf.o
LOAD /tmp/ccHsQWrh.o
LOAD /tmp/cc2HA0uj.o
LOAD /tmp/ccXzZdto.o
LOAD rtx.o
LOAD dbug.o
LOAD rtx_loader.o
LOAD memory.o
LOAD messaging.o
LOAD priority.o
LOAD process_management.o
LOAD uart.o
LOAD kcd.o
LOAD timer.o
LOAD init.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10200000     0x1f90
 *(.text)
 .text          0x10200000       0x1e /tmp/ccjJZfMc.o
 *fill*         0x1020001e        0x2 00
 .text          0x10200020       0x58 /tmp/cciTwjZf.o
                0x10200020                process_switch
 .text          0x10200078       0x4c /tmp/ccHsQWrh.o
                0x10200078                asm_serial_entry
 .text          0x102000c4       0x44 /tmp/cc2HA0uj.o
                0x102000c4                asm_timer_entry
 .text          0x10200108       0xa0 /tmp/ccXzZdto.o
                0x10200108                display_task_manager
                0x10200158                display_all
 .text          0x102001a8       0x18 rtx.o
                0x102001a8                coldfire_vbr_init
 .text          0x102001c0      0x3aa dbug.o
                0x1020038c                task_manager
                0x10200444                display_queue
                0x102001e0                rtx_dbug_outs
                0x10200552                display_mailbox
                0x1020021c                rtx_dbug_out_block
                0x1020055a                display_msg_log
                0x102001c0                rtx_dbug_out_char
                0x1020024c                print_int
                0x10200562                display_hotkeys
                0x102002d4                exception
                0x10200472                display_queue_all
                0x102002b8                rtx_dbug_outs_int
 *fill*         0x1020056a        0x2 00
 .text          0x1020056c       0x58 rtx_loader.o
                0x1020056c                main
 .text          0x102005c4      0x176 memory.o
                0x102005c4                malloc
                0x10200660                request_memory_block
                0x1020060c                proc_malloc
                0x102006d0                release_memory_block
 *fill*         0x1020073a        0x2 00
 .text          0x1020073c      0x47c messaging.o
                0x10200b9c                read_message
                0x10200b36                set_message_type
                0x10200b18                message_type
                0x10200b58                write_message
                0x1020073c                send_message
                0x10200a54                unblock_waiting_procs
                0x10200874                receive_message
                0x10200a4a                delayed_send
 .text          0x10200bb8      0x134 priority.o
                0x10200c82                get_process_priority
                0x10200bb8                set_process_priority
 .text          0x10200cec      0x804 process_management.o
                0x10200ed6                remove_process
                0x10201476                find_blocked_proc_by_id
                0x10200cf8                process_bootstrap
                0x102012b0                context_switch
                0x1020110e                remove_blocked_process
                0x10200dea                insert_new_process
                0x102014d8                atomic_up
                0x102014e4                atomic_down
                0x10200d42                insert_process
                0x10200cec                release_processor
                0x10200fa4                insert_blocked_process
 .text          0x102014f0      0x33a uart.o
                0x10201554                uprintf
                0x102017e0                register_command
                0x102015be                c_serial_handler
                0x10201524                clear_message
                0x102014f0                store_message
 *fill*         0x1020182a        0x2 00
 .text          0x1020182c       0x3e kcd.o
                0x1020182c                kcd
 *fill*         0x1020186a        0x2 00
 .text          0x1020186c       0x48 timer.o
                0x1020186c                c_timer_handler
                0x102018aa                set_system_time
                0x102018a2                wallclock
 .text          0x102018b4      0x3ce init.o
                0x10201c5c                sleep
                0x10201b74                init_timer
                0x10201c4e                null_process
                0x10201940                init_memory
                0x10201a60                init_scheduler
                0x10201a16                init_queues
                0x10201994                init_mailbox
                0x10201aac                init_io
                0x10201914                init_traps
                0x10201bb2                register_commands
                0x102018b4                create_pib
                0x10201c1e                system_kickoff
                0x10201c84                . = ALIGN (0x4)
 *fill*         0x10201c82        0x2 00
                0x10201c84                __CTOR_LIST__ = .
                0x10201c84        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10201c88        0x4 LONG 0x0
                0x10201c8c                __CTOR_END__ = .
                0x10201c8c                __DTOR_LIST__ = .
                0x10201c8c        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10201c90        0x4 LONG 0x0
                0x10201c94                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10201c94      0x1fd dbug.o
 .rodata        0x10201e91       0xb4 rtx_loader.o
 .rodata        0x10201f45       0x23 process_management.o
 .rodata        0x10201f68        0x5 uart.o
 .rodata        0x10201f6d        0x9 kcd.o
 .rodata        0x10201f76        0xa init.o
 *(.gcc_except_table)
                0x10201f80                __INIT_SECTION__ = .
                0x10201f80        0x4 LONG 0x4e560000
 *(.init)
                0x10201f84        0x2 SHORT 0x4e5e
                0x10201f86        0x2 SHORT 0x4e75
                0x10201f88                __FINI_SECTION__ = .
                0x10201f88        0x4 LONG 0x4e560000
 *(.fini)
                0x10201f8c        0x2 SHORT 0x4e5e
                0x10201f8e        0x2 SHORT 0x4e75
                0x10201f90                _etext = .
 *(.lit)

.data           0x10201f90       0x1c
 *(.shdata)
 *(.data)
 .data          0x10201f90        0x0 /tmp/ccjJZfMc.o
 .data          0x10201f90        0x0 /tmp/cciTwjZf.o
 .data          0x10201f90        0x0 /tmp/ccHsQWrh.o
 .data          0x10201f90        0x0 /tmp/cc2HA0uj.o
 .data          0x10201f90        0x0 /tmp/ccXzZdto.o
 .data          0x10201f90        0x0 rtx.o
 .data          0x10201f90        0x0 dbug.o
 .data          0x10201f90        0x0 rtx_loader.o
 .data          0x10201f90        0x4 memory.o
                0x10201f90                heap
 .data          0x10201f94        0x0 messaging.o
 .data          0x10201f94        0x0 priority.o
 .data          0x10201f94        0x0 process_management.o
 .data          0x10201f94       0x13 uart.o
                0x10201f97                StringHack
                0x10201f94                CharEnter
 *fill*         0x10201fa7        0x1 00
 .data          0x10201fa8        0x0 kcd.o
 .data          0x10201fa8        0x4 timer.o
                0x10201fa8                Ticks
 .data          0x10201fac        0x0 init.o
                0x10201fac                _edata = .

.bss            0x10201fac     0x1414
                0x10201fac                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10201fac        0x0 /tmp/ccjJZfMc.o
 .bss           0x10201fac        0x0 /tmp/cciTwjZf.o
 .bss           0x10201fac        0x0 /tmp/ccHsQWrh.o
 .bss           0x10201fac        0x0 /tmp/cc2HA0uj.o
 .bss           0x10201fac        0x0 /tmp/ccXzZdto.o
 .bss           0x10201fac        0x0 rtx.o
 .bss           0x10201fac        0x0 dbug.o
 .bss           0x10201fac        0x0 rtx_loader.o
 .bss           0x10201fac        0x0 memory.o
 .bss           0x10201fac        0x0 messaging.o
 .bss           0x10201fac        0x0 priority.o
 .bss           0x10201fac        0x0 process_management.o
 .bss           0x10201fac        0x0 uart.o
 .bss           0x10201fac        0x0 kcd.o
 .bss           0x10201fac        0xc timer.o
                0x10201fac                Hours
                0x10201fb0                Minutes
                0x10201fb4                Seconds
 .bss           0x10201fb8        0x0 init.o
 *(COMMON)
 *fill*         0x10201fb8        0x8 00
 COMMON         0x10201fc0     0x1010 /tmp/ccjJZfMc.o
                0x10201fc0                old_stack
                0x10201fd0                main_stack
 COMMON         0x10202fd0      0x3f0 dbug.o
                0x10202fd0                old_fp
                0x10202fd4                bmem_queue
                0x10202fe4                prio
                0x10202fe8                bmsg_queue
                0x10202ff8                init_key_head
                0x10202ffc                running
                0x10203000                mailbox
                0x10203280                init_key_tail
                0x10203284                CharIn
                0x10203286                memoryBlocks
                0x10203386                temp_sp
                0x1020338a                proc_pointer
                0x1020338e                ready_queue
                0x1020339e                msg_length
                0x102033a2                command_flag
                0x102033a6                current_command
                0x102033aa                red_lever
                0x102033ae                sender_ID
                0x102033b2                init_blocks_head
                0x102033b6                total_procs
                0x102033ba                CharOut
                0x102033bc                kcd_msg
                0x102033c0                _end = ALIGN (0x8)
                0x102033c0                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)
                0x10100000                __RTX_ENTRY__ = 0x10100000
                0x10300000                __REGISTER_RTX_ENTRY__ = 0x10300000
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000

__RTX_TEST_CODE__
                0x10400000        0x0
                0x10400000                __RTX_TEST_CODE_ENTRY__ = <code 345> (.)
 *(__RTX_TEST_CODE__)

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c rtx_loader.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx_loader.bin elf32-m68k)

.comment        0x00000000      0x1ad
 .comment       0x00000000       0x27 rtx.o
 .comment       0x00000027       0x27 dbug.o
 .comment       0x0000004e       0x27 rtx_loader.o
 .comment       0x00000075       0x27 memory.o
 .comment       0x0000009c       0x27 messaging.o
 .comment       0x000000c3       0x27 priority.o
 .comment       0x000000ea       0x27 process_management.o
 .comment       0x00000111       0x27 uart.o
 .comment       0x00000138       0x27 kcd.o
 .comment       0x0000015f       0x27 timer.o
 .comment       0x00000186       0x27 init.o
