
Allocating common symbols
Common symbol       size              file

old_fp              0x4               dbug.o
bmem_queue          0x10              dbug.o
prio                0x4               dbug.o
bmsg_queue          0x10              dbug.o
init_key_head       0x4               dbug.o
running             0x4               dbug.o
mailbox             0x280             dbug.o
init_key_tail       0x4               dbug.o
delayed_mailbox     0x280             dbug.o
CharIn              0x1               dbug.o
old_stack           0x4               /tmp/ccRqinn5.o
memoryBlocks        0x100             dbug.o
temp_sp             0x4               dbug.o
proc_pointer        0x4               dbug.o
ready_queue         0x10              dbug.o
msg_length          0x4               dbug.o
command_flag        0x4               dbug.o
main_stack          0x1000            /tmp/ccRqinn5.o
current_command     0x4               dbug.o
red_lever           0x4               dbug.o
sender_ID           0x4               dbug.o
timer_display       0x4               dbug.o
init_blocks_head    0x4               dbug.o
total_procs         0x4               dbug.o
CharOut             0x1               dbug.o
kcd_msg             0x4               dbug.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccRqinn5.o
LOAD /tmp/cc6A2du3.o
LOAD /tmp/ccJj6W81.o
LOAD /tmp/ccY91GAZ.o
LOAD /tmp/ccHvwmdX.o
LOAD rtx.o
LOAD dbug.o
LOAD main_rtx.o
LOAD memory.o
LOAD messaging.o
LOAD priority.o
LOAD process_management.o
LOAD uart.o
LOAD kcd.o
LOAD crt.o
LOAD timer.o
LOAD init.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000     0x30c1
 *(.text)
 .text          0x10100000       0x1e /tmp/ccRqinn5.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x58 /tmp/cc6A2du3.o
                0x10100020                process_switch
 .text          0x10100078       0x4c /tmp/ccJj6W81.o
                0x10100078                asm_serial_entry
 .text          0x101000c4       0x44 /tmp/ccY91GAZ.o
                0x101000c4                asm_timer_entry
 .text          0x10100108       0xa0 /tmp/ccHvwmdX.o
                0x10100108                display_task_manager
                0x10100158                display_all
 .text          0x101001a8       0x18 rtx.o
                0x101001a8                coldfire_vbr_init
 .text          0x101001c0      0x594 dbug.o
                0x1010047e                task_manager
                0x10100536                display_queue
                0x101001e0                rtx_dbug_outs
                0x101006b0                display_mailbox
                0x1010021c                rtx_dbug_out_block
                0x101001c0                rtx_dbug_out_char
                0x1010024c                print_int
                0x10100714                display_hotkeys
                0x101002d4                exception
                0x10100564                display_queue_all
                0x101002b8                rtx_dbug_outs_int
 .text          0x10100754      0x1f0 main_rtx.o
                0x101008c6                __main
                0x10100754                create_processes
                0x101008d0                main
 .text          0x10100944      0x23c memory.o
                0x101009e0                unblock_single_waiting_process
                0x10100944                malloc
                0x10100a58                request_memory_block
                0x1010098c                proc_malloc
                0x10100b06                release_memory_block
 .text          0x10100b80      0x63e messaging.o
                0x10101048                read_message
                0x10100fd2                set_message_type
                0x10100fb4                message_type
                0x10100ff4                write_message
                0x10100b80                send_message
                0x10100ef0                unblock_waiting_procs
                0x10101064                decrement_delayed_mailbox
                0x10100cc6                receive_message
                0x10100dda                delayed_send
 *fill*         0x101011be        0x2 00
 .text          0x101011c0      0x180 priority.o
                0x101012ca                get_process_priority
                0x101011c0                set_process_priority
 .text          0x10101340      0x87c process_management.o
                0x10101550                remove_process
                0x10101ae0                find__proc_by_id
                0x10101b42                find_blocked_proc_by_id
                0x1010134c                process_bootstrap
                0x101013ae                clear_priority
                0x1010191c                context_switch
                0x1010177a                remove_blocked_process
                0x10101464                insert_new_process
                0x10101ba4                atomic_up
                0x10101bb0                atomic_down
                0x101013bc                insert_process
                0x10101340                release_processor
                0x1010161e                insert_blocked_process
 .text          0x10101bbc      0x31c uart.o
                0x10101c22                uprintf
                0x10101c8c                uprintn
                0x10101d06                c_serial_handler
                0x10101bee                clear_message
                0x10101bbc                store_message
 .text          0x10101ed8      0x4e2 kcd.o
                0x10101f22                find_command
                0x10101f52                kcd
                0x10101ed8                register_command
 *fill*         0x101023ba        0x2 00
 .text          0x101023bc       0x42 crt.o
                0x101023bc                crt
 *fill*         0x101023fe        0x2 00
 .text          0x10102400      0x312 timer.o
                0x10102400                c_timer_handler
                0x101026d6                set_system_time
                0x10102460                wallclock
 *fill*         0x10102712        0x2 00
 .text          0x10102714      0x448 init.o
                0x10102b36                sleep
                0x10102a40                init_timer
                0x10102b28                null_process
                0x101027a0                init_memory
                0x1010292c                init_scheduler
                0x101028dc                init_queues
                0x101027f4                init_mailbox
                0x10102978                init_io
                0x10102774                init_traps
                0x10102a84                register_commands
                0x10102714                create_pib
                0x10102af8                system_kickoff
                0x10102b5c                . = ALIGN (0x4)
                0x10102b5c                __CTOR_LIST__ = .
                0x10102b5c        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10102b60        0x4 LONG 0x0
                0x10102b64                __CTOR_END__ = .
                0x10102b64                __DTOR_LIST__ = .
                0x10102b64        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10102b68        0x4 LONG 0x0
                0x10102b6c                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10102b6c      0x409 dbug.o
 .rodata        0x10102f75       0x6c main_rtx.o
 .rodata        0x10102fe1       0x51 process_management.o
 .rodata        0x10103032       0x73 kcd.o
 .rodata        0x101030a5        0x2 timer.o
 .rodata        0x101030a7        0xa init.o
 *(.gcc_except_table)
                0x101030b1                __INIT_SECTION__ = .
                0x101030b1        0x4 LONG 0x4e560000
 *(.init)
                0x101030b5        0x2 SHORT 0x4e5e
                0x101030b7        0x2 SHORT 0x4e75
                0x101030b9                __FINI_SECTION__ = .
                0x101030b9        0x4 LONG 0x4e560000
 *(.fini)
                0x101030bd        0x2 SHORT 0x4e5e
                0x101030bf        0x2 SHORT 0x4e75
                0x101030c1                _etext = .
 *(.lit)

.data           0x101030c4       0x20
 *(.shdata)
 *(.data)
 .data          0x101030c4        0x0 /tmp/ccRqinn5.o
 .data          0x101030c4        0x0 /tmp/cc6A2du3.o
 .data          0x101030c4        0x0 /tmp/ccJj6W81.o
 .data          0x101030c4        0x0 /tmp/ccY91GAZ.o
 .data          0x101030c4        0x0 /tmp/ccHvwmdX.o
 .data          0x101030c4        0x0 rtx.o
 .data          0x101030c4        0x0 dbug.o
 .data          0x101030c4        0x0 main_rtx.o
 .data          0x101030c4        0x4 memory.o
                0x101030c4                heap
 .data          0x101030c8        0x0 messaging.o
 .data          0x101030c8        0x0 priority.o
 .data          0x101030c8        0x0 process_management.o
 .data          0x101030c8        0x5 uart.o
                0x101030c8                crlfgt
 *fill*         0x101030cd        0x3 00
 .data          0x101030d0        0x0 kcd.o
 .data          0x101030d0        0x0 crt.o
 .data          0x101030d0       0x12 timer.o
                0x101030d0                crlf
                0x101030de                Ticks
                0x101030d4                TimeString
 *fill*         0x101030e2        0x2 00
 .data          0x101030e4        0x0 init.o
                0x101030e4                _edata = .

.bss            0x101030e4     0x1690
                0x101030e4                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x101030e4        0x0 /tmp/ccRqinn5.o
 .bss           0x101030e4        0x0 /tmp/cc6A2du3.o
 .bss           0x101030e4        0x0 /tmp/ccJj6W81.o
 .bss           0x101030e4        0x0 /tmp/ccY91GAZ.o
 .bss           0x101030e4        0x0 /tmp/ccHvwmdX.o
 .bss           0x101030e4        0x0 rtx.o
 .bss           0x101030e4        0x0 dbug.o
 .bss           0x101030e4        0x0 main_rtx.o
 .bss           0x101030e4        0x0 memory.o
 .bss           0x101030e4        0x0 messaging.o
 .bss           0x101030e4        0x0 priority.o
 .bss           0x101030e4        0x0 process_management.o
 .bss           0x101030e4        0x0 uart.o
 .bss           0x101030e4        0x0 kcd.o
 .bss           0x101030e4        0x0 crt.o
 .bss           0x101030e4        0xc timer.o
                0x101030e4                Hours
                0x101030e8                Minutes
                0x101030ec                Seconds
 .bss           0x101030f0        0x0 init.o
 *(COMMON)
 COMMON         0x101030f0     0x1010 /tmp/ccRqinn5.o
                0x101030f0                old_stack
                0x10103100                main_stack
 COMMON         0x10104100      0x674 dbug.o
                0x10104100                old_fp
                0x10104104                bmem_queue
                0x10104114                prio
                0x10104118                bmsg_queue
                0x10104128                init_key_head
                0x1010412c                running
                0x10104130                mailbox
                0x101043b0                init_key_tail
                0x101043b4                delayed_mailbox
                0x10104634                CharIn
                0x10104636                memoryBlocks
                0x10104736                temp_sp
                0x1010473a                proc_pointer
                0x1010473e                ready_queue
                0x1010474e                msg_length
                0x10104752                command_flag
                0x10104756                current_command
                0x1010475a                red_lever
                0x1010475e                sender_ID
                0x10104762                timer_display
                0x10104766                init_blocks_head
                0x1010476a                total_procs
                0x1010476e                CharOut
                0x10104770                kcd_msg
                0x10104778                _end = ALIGN (0x8)
                0x10104778                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000       0x84
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
 __REGISTER_RTX__
                0x10300000       0x84 main_rtx.o
                0x10300000                register_rtx
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c main_rtx.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx.bin elf32-m68k)

.comment        0x00000000      0x1d4
 .comment       0x00000000       0x27 rtx.o
 .comment       0x00000027       0x27 dbug.o
 .comment       0x0000004e       0x27 main_rtx.o
 .comment       0x00000075       0x27 memory.o
 .comment       0x0000009c       0x27 messaging.o
 .comment       0x000000c3       0x27 priority.o
 .comment       0x000000ea       0x27 process_management.o
 .comment       0x00000111       0x27 uart.o
 .comment       0x00000138       0x27 kcd.o
 .comment       0x0000015f       0x27 crt.o
 .comment       0x00000186       0x27 timer.o
 .comment       0x000001ad       0x27 init.o
