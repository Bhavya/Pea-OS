
Allocating common symbols
Common symbol       size              file

old_fp              0x4               dbug.o
bmem_queue          0x10              dbug.o
prio                0x4               dbug.o
bmsg_queue          0x10              dbug.o
init_key_head       0x4               dbug.o
running             0x4               dbug.o
mailbox             0x280             dbug.o
init_key_tail       0x4               dbug.o
CharIn              0x1               dbug.o
old_stack           0x4               /tmp/cciKR90q.o
memoryBlocks        0x100             dbug.o
temp_sp             0x4               dbug.o
proc_pointer        0x4               dbug.o
ready_queue         0x10              dbug.o
msg_length          0x4               dbug.o
command_flag        0x4               dbug.o
main_stack          0x1000            /tmp/cciKR90q.o
current_command     0x4               dbug.o
red_lever           0x4               dbug.o
sender_ID           0x4               dbug.o
timer_display       0x4               dbug.o
init_blocks_head    0x4               dbug.o
total_procs         0x4               dbug.o
CharOut             0x1               dbug.o
kcd_msg             0x4               dbug.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/cciKR90q.o
LOAD /tmp/ccmutrsI.o
LOAD /tmp/ccM7tOP2.o
LOAD /tmp/ccuYWENn.o
LOAD /tmp/ccMPQRZG.o
LOAD rtx.o
LOAD dbug.o
LOAD main_rtx.o
LOAD memory.o
LOAD messaging.o
LOAD priority.o
LOAD process_management.o
LOAD uart.o
LOAD kcd.o
LOAD crt.o
LOAD timer.o
LOAD init.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000     0x2b85
 *(.text)
 .text          0x10100000       0x1e /tmp/cciKR90q.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x58 /tmp/ccmutrsI.o
                0x10100020                process_switch
 .text          0x10100078       0x4c /tmp/ccM7tOP2.o
                0x10100078                asm_serial_entry
 .text          0x101000c4       0x44 /tmp/ccuYWENn.o
                0x101000c4                asm_timer_entry
 .text          0x10100108       0xa0 /tmp/ccMPQRZG.o
                0x10100108                display_task_manager
                0x10100158                display_all
 .text          0x101001a8       0x18 rtx.o
                0x101001a8                coldfire_vbr_init
 .text          0x101001c0      0x508 dbug.o
                0x1010047e                task_manager
                0x10100536                display_queue
                0x101001e0                rtx_dbug_outs
                0x101006b0                display_mailbox
                0x1010021c                rtx_dbug_out_block
                0x101006b8                display_msg_log
                0x101001c0                rtx_dbug_out_char
                0x1010024c                print_int
                0x101006c0                display_hotkeys
                0x101002d4                exception
                0x10100564                display_queue_all
                0x101002b8                rtx_dbug_outs_int
 .text          0x101006c8      0x1f0 main_rtx.o
                0x1010083a                __main
                0x101006c8                create_processes
                0x10100844                main
 .text          0x101008b8      0x23c memory.o
                0x10100954                unblock_single_waiting_process
                0x101008b8                malloc
                0x101009cc                request_memory_block
                0x10100900                proc_malloc
                0x10100a7a                release_memory_block
 .text          0x10100af4      0x3d8 messaging.o
                0x10100eb0                read_message
                0x10100e3a                set_message_type
                0x10100e1c                message_type
                0x10100e5c                write_message
                0x10100af4                send_message
                0x10100d58                unblock_waiting_procs
                0x10100c3a                receive_message
                0x10100d4e                delayed_send
 .text          0x10100ecc      0x180 priority.o
                0x10100fd6                get_process_priority
                0x10100ecc                set_process_priority
 .text          0x1010104c      0x806 process_management.o
                0x10101248                remove_process
                0x101017d8                find_blocked_proc_by_id
                0x10101058                process_bootstrap
                0x101010a6                clear_priority
                0x10101614                context_switch
                0x10101472                remove_blocked_process
                0x1010115c                insert_new_process
                0x1010183a                atomic_up
                0x10101846                atomic_down
                0x101010b4                insert_process
                0x1010104c                release_processor
                0x10101316                insert_blocked_process
 *fill*         0x10101852        0x2 00
 .text          0x10101854      0x39a uart.o
                0x101018ba                uprintf
                0x10101ba4                register_command
                0x10101924                uprintn
                0x1010199e                c_serial_handler
                0x10101886                clear_message
                0x10101854                store_message
 *fill*         0x10101bee        0x2 00
 .text          0x10101bf0      0x2b6 kcd.o
                0x10101bf0                kcd
 *fill*         0x10101ea6        0x2 00
 .text          0x10101ea8       0x42 crt.o
                0x10101ea8                crt
 *fill*         0x10101eea        0x2 00
 .text          0x10101eec      0x398 timer.o
                0x10101eec                c_timer_handler
                0x1010227a                set_system_time
                0x10101f22                wallclock
 .text          0x10102284      0x3e2 init.o
                0x10102640                sleep
                0x1010254a                init_timer
                0x10102632                null_process
                0x10102310                init_memory
                0x10102436                init_scheduler
                0x101023e6                init_queues
                0x10102364                init_mailbox
                0x10102482                init_io
                0x101022e4                init_traps
                0x1010258e                register_commands
                0x10102284                create_pib
                0x10102602                system_kickoff
                0x10102668                . = ALIGN (0x4)
 *fill*         0x10102666        0x2 00
                0x10102668                __CTOR_LIST__ = .
                0x10102668        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x1010266c        0x4 LONG 0x0
                0x10102670                __CTOR_END__ = .
                0x10102670                __DTOR_LIST__ = .
                0x10102670        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10102674        0x4 LONG 0x0
                0x10102678                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10102678      0x3ef dbug.o
 .rodata        0x10102a67       0x6c main_rtx.o
 .rodata        0x10102ad3       0x23 process_management.o
 .rodata        0x10102af6       0x73 kcd.o
 .rodata        0x10102b69        0x2 timer.o
 .rodata        0x10102b6b        0xa init.o
 *(.gcc_except_table)
                0x10102b75                __INIT_SECTION__ = .
                0x10102b75        0x4 LONG 0x4e560000
 *(.init)
                0x10102b79        0x2 SHORT 0x4e5e
                0x10102b7b        0x2 SHORT 0x4e75
                0x10102b7d                __FINI_SECTION__ = .
                0x10102b7d        0x4 LONG 0x4e560000
 *(.fini)
                0x10102b81        0x2 SHORT 0x4e5e
                0x10102b83        0x2 SHORT 0x4e75
                0x10102b85                _etext = .
 *(.lit)

.data           0x10102b88       0x20
 *(.shdata)
 *(.data)
 .data          0x10102b88        0x0 /tmp/cciKR90q.o
 .data          0x10102b88        0x0 /tmp/ccmutrsI.o
 .data          0x10102b88        0x0 /tmp/ccM7tOP2.o
 .data          0x10102b88        0x0 /tmp/ccuYWENn.o
 .data          0x10102b88        0x0 /tmp/ccMPQRZG.o
 .data          0x10102b88        0x0 rtx.o
 .data          0x10102b88        0x0 dbug.o
 .data          0x10102b88        0x0 main_rtx.o
 .data          0x10102b88        0x4 memory.o
                0x10102b88                heap
 .data          0x10102b8c        0x0 messaging.o
 .data          0x10102b8c        0x0 priority.o
 .data          0x10102b8c        0x0 process_management.o
 .data          0x10102b8c        0x5 uart.o
                0x10102b8c                crlfgt
 *fill*         0x10102b91        0x3 00
 .data          0x10102b94        0x0 kcd.o
 .data          0x10102b94        0x0 crt.o
 .data          0x10102b94       0x12 timer.o
                0x10102b94                crlf
                0x10102ba2                Ticks
                0x10102b98                TimeString
 *fill*         0x10102ba6        0x2 00
 .data          0x10102ba8        0x0 init.o
                0x10102ba8                _edata = .

.bss            0x10102ba8     0x141c
                0x10102ba8                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10102ba8        0x0 /tmp/cciKR90q.o
 .bss           0x10102ba8        0x0 /tmp/ccmutrsI.o
 .bss           0x10102ba8        0x0 /tmp/ccM7tOP2.o
 .bss           0x10102ba8        0x0 /tmp/ccuYWENn.o
 .bss           0x10102ba8        0x0 /tmp/ccMPQRZG.o
 .bss           0x10102ba8        0x0 rtx.o
 .bss           0x10102ba8        0x0 dbug.o
 .bss           0x10102ba8        0x0 main_rtx.o
 .bss           0x10102ba8        0x0 memory.o
 .bss           0x10102ba8        0x0 messaging.o
 .bss           0x10102ba8        0x0 priority.o
 .bss           0x10102ba8        0x0 process_management.o
 .bss           0x10102ba8        0x0 uart.o
 .bss           0x10102ba8        0x0 kcd.o
 .bss           0x10102ba8        0x0 crt.o
 .bss           0x10102ba8        0xc timer.o
                0x10102ba8                Hours
                0x10102bac                Minutes
                0x10102bb0                Seconds
 .bss           0x10102bb4        0x0 init.o
 *(COMMON)
 *fill*         0x10102bb4        0xc 00
 COMMON         0x10102bc0     0x1010 /tmp/cciKR90q.o
                0x10102bc0                old_stack
                0x10102bd0                main_stack
 COMMON         0x10103bd0      0x3f4 dbug.o
                0x10103bd0                old_fp
                0x10103bd4                bmem_queue
                0x10103be4                prio
                0x10103be8                bmsg_queue
                0x10103bf8                init_key_head
                0x10103bfc                running
                0x10103c00                mailbox
                0x10103e80                init_key_tail
                0x10103e84                CharIn
                0x10103e86                memoryBlocks
                0x10103f86                temp_sp
                0x10103f8a                proc_pointer
                0x10103f8e                ready_queue
                0x10103f9e                msg_length
                0x10103fa2                command_flag
                0x10103fa6                current_command
                0x10103faa                red_lever
                0x10103fae                sender_ID
                0x10103fb2                timer_display
                0x10103fb6                init_blocks_head
                0x10103fba                total_procs
                0x10103fbe                CharOut
                0x10103fc0                kcd_msg
                0x10103fc8                _end = ALIGN (0x8)
                0x10103fc8                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000       0x84
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
 __REGISTER_RTX__
                0x10300000       0x84 main_rtx.o
                0x10300000                register_rtx
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c main_rtx.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx.bin elf32-m68k)

.comment        0x00000000      0x1d4
 .comment       0x00000000       0x27 rtx.o
 .comment       0x00000027       0x27 dbug.o
 .comment       0x0000004e       0x27 main_rtx.o
 .comment       0x00000075       0x27 memory.o
 .comment       0x0000009c       0x27 messaging.o
 .comment       0x000000c3       0x27 priority.o
 .comment       0x000000ea       0x27 process_management.o
 .comment       0x00000111       0x27 uart.o
 .comment       0x00000138       0x27 kcd.o
 .comment       0x0000015f       0x27 crt.o
 .comment       0x00000186       0x27 timer.o
 .comment       0x000001ad       0x27 init.o
